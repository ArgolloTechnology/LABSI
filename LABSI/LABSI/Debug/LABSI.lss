
LABSI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000c20  00000cb4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000040d  00800124  00800124  00000cd8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cd8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00000d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003877  00000000  00000000  00000f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bbe  00000000  00000000  000047ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c1f  00000000  00000000  000053bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000914  00000000  00000000  00006fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b14  00000000  00000000  000078f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003d2f  00000000  00000000  00008404  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  0000c133  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e2       	ldi	r30, 0x20	; 32
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 32       	cpi	r26, 0x24	; 36
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	a4 e2       	ldi	r26, 0x24	; 36
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 33       	cpi	r26, 0x31	; 49
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 46 01 	call	0x28c	; 0x28c <main>
  9e:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
int diry;


int init(void)
{
	DDRD = 0x00;
  a6:	1a b8       	out	0x0a, r1	; 10
	
	dirx = 1;
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <dirx+0x1>
  b0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <dirx>
	diry = 1;
  b4:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
  b8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
	GLCD_Setup();
  bc:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <GLCD_Setup>
}
  c0:	08 95       	ret

000000c2 <render>:
void render(){
  c2:	0f 93       	push	r16
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
	GLCD_Clear();
  c8:	0e 94 35 04 	call	0x86a	; 0x86a <GLCD_Clear>
	GLCD_GotoXY(ball.x, ball.y);
  cc:	c8 e1       	ldi	r28, 0x18	; 24
  ce:	d1 e0       	ldi	r29, 0x01	; 1
  d0:	6a 81       	ldd	r22, Y+2	; 0x02
  d2:	88 81       	ld	r24, Y
  d4:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
	GLCD_DrawRectangle(ball.x,ball.y,ball.x+1,ball.y+1,GLCD_Black);
  d8:	6a 81       	ldd	r22, Y+2	; 0x02
  da:	88 81       	ld	r24, Y
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	26 0f       	add	r18, r22
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	48 0f       	add	r20, r24
  e4:	0f ef       	ldi	r16, 0xFF	; 255
  e6:	0e 94 c7 03 	call	0x78e	; 0x78e <GLCD_DrawRectangle>
	GLCD_DrawLine(player1.x,player1.y,player1.x,player1.y+player1.height,GLCD_Black);
  ea:	ec e0       	ldi	r30, 0x0C	; 12
  ec:	f1 e0       	ldi	r31, 0x01	; 1
  ee:	62 81       	ldd	r22, Z+2	; 0x02
  f0:	26 81       	ldd	r18, Z+6	; 0x06
  f2:	80 81       	ld	r24, Z
  f4:	26 0f       	add	r18, r22
  f6:	48 2f       	mov	r20, r24
  f8:	0e 94 34 03 	call	0x668	; 0x668 <GLCD_DrawLine>
	GLCD_DrawLine(player2.x,player2.y,player2.x,player2.y+player2.height,GLCD_Black);
  fc:	e0 e0       	ldi	r30, 0x00	; 0
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	62 81       	ldd	r22, Z+2	; 0x02
 102:	26 81       	ldd	r18, Z+6	; 0x06
 104:	80 81       	ld	r24, Z
 106:	26 0f       	add	r18, r22
 108:	48 2f       	mov	r20, r24
 10a:	0e 94 34 03 	call	0x668	; 0x668 <GLCD_DrawLine>
	GLCD_Render();
 10e:	0e 94 9d 01 	call	0x33a	; 0x33a <GLCD_Render>
}
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	0f 91       	pop	r16
 118:	08 95       	ret

0000011a <ballMoviment>:
void ballMoviment(){
 11a:	8f 92       	push	r8
 11c:	9f 92       	push	r9
 11e:	af 92       	push	r10
 120:	bf 92       	push	r11
 122:	cf 92       	push	r12
 124:	df 92       	push	r13
 126:	ef 92       	push	r14
 128:	ff 92       	push	r15
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
	ball.x+=dirx*ball.speed;
 132:	c8 e1       	ldi	r28, 0x18	; 24
 134:	d1 e0       	ldi	r29, 0x01	; 1
 136:	c8 84       	ldd	r12, Y+8	; 0x08
 138:	d9 84       	ldd	r13, Y+9	; 0x09
 13a:	ea 84       	ldd	r14, Y+10	; 0x0a
 13c:	fb 84       	ldd	r15, Y+11	; 0x0b
 13e:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <dirx>
 142:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <dirx+0x1>
 146:	07 2e       	mov	r0, r23
 148:	00 0c       	add	r0, r0
 14a:	88 0b       	sbc	r24, r24
 14c:	99 0b       	sbc	r25, r25
 14e:	0e 94 15 05 	call	0xa2a	; 0xa2a <__floatsisf>
 152:	a7 01       	movw	r20, r14
 154:	96 01       	movw	r18, r12
 156:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
 15a:	4b 01       	movw	r8, r22
 15c:	5c 01       	movw	r10, r24
 15e:	68 81       	ld	r22, Y
 160:	79 81       	ldd	r23, Y+1	; 0x01
 162:	07 2e       	mov	r0, r23
 164:	00 0c       	add	r0, r0
 166:	88 0b       	sbc	r24, r24
 168:	99 0b       	sbc	r25, r25
 16a:	0e 94 15 05 	call	0xa2a	; 0xa2a <__floatsisf>
 16e:	a5 01       	movw	r20, r10
 170:	94 01       	movw	r18, r8
 172:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__addsf3>
 176:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fixsfsi>
 17a:	8b 01       	movw	r16, r22
 17c:	79 83       	std	Y+1, r23	; 0x01
 17e:	68 83       	st	Y, r22
	ball.y+=diry*ball.speed;
 180:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <__data_end>
 184:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <__data_end+0x1>
 188:	07 2e       	mov	r0, r23
 18a:	00 0c       	add	r0, r0
 18c:	88 0b       	sbc	r24, r24
 18e:	99 0b       	sbc	r25, r25
 190:	0e 94 15 05 	call	0xa2a	; 0xa2a <__floatsisf>
 194:	a7 01       	movw	r20, r14
 196:	96 01       	movw	r18, r12
 198:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
 19c:	6b 01       	movw	r12, r22
 19e:	7c 01       	movw	r14, r24
 1a0:	6a 81       	ldd	r22, Y+2	; 0x02
 1a2:	7b 81       	ldd	r23, Y+3	; 0x03
 1a4:	07 2e       	mov	r0, r23
 1a6:	00 0c       	add	r0, r0
 1a8:	88 0b       	sbc	r24, r24
 1aa:	99 0b       	sbc	r25, r25
 1ac:	0e 94 15 05 	call	0xa2a	; 0xa2a <__floatsisf>
 1b0:	a7 01       	movw	r20, r14
 1b2:	96 01       	movw	r18, r12
 1b4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__addsf3>
 1b8:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fixsfsi>
 1bc:	9b 01       	movw	r18, r22
 1be:	7b 83       	std	Y+3, r23	; 0x03
 1c0:	6a 83       	std	Y+2, r22	; 0x02
	if(ball.x>borderX-ball.width)
 1c2:	4c 81       	ldd	r20, Y+4	; 0x04
 1c4:	5d 81       	ldd	r21, Y+5	; 0x05
 1c6:	80 e8       	ldi	r24, 0x80	; 128
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	84 1b       	sub	r24, r20
 1cc:	95 0b       	sbc	r25, r21
 1ce:	80 17       	cp	r24, r16
 1d0:	91 07       	cpc	r25, r17
 1d2:	54 f4       	brge	.+20     	; 0x1e8 <ballMoviment+0xce>
	{
		ball.x=borderX-ball.width;
 1d4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <ball+0x1>
 1d8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <ball>
		dirx=-1;
 1dc:	8f ef       	ldi	r24, 0xFF	; 255
 1de:	9f ef       	ldi	r25, 0xFF	; 255
 1e0:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <dirx+0x1>
 1e4:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <dirx>
		//speed+=0.25;
	}
	if(ball.x<0)
 1e8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <ball>
 1ec:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <ball+0x1>
 1f0:	99 23       	and	r25, r25
 1f2:	54 f4       	brge	.+20     	; 0x208 <ballMoviment+0xee>
	{
		ball.x=0;
 1f4:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <ball+0x1>
 1f8:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <ball>
		//speed+=0.25;
		dirx=1;
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <dirx+0x1>
 204:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <dirx>
	}
	if(ball.y>borderY-ball.height)
 208:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <ball+0x6>
 20c:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <ball+0x7>
 210:	80 e4       	ldi	r24, 0x40	; 64
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	84 1b       	sub	r24, r20
 216:	95 0b       	sbc	r25, r21
 218:	82 17       	cp	r24, r18
 21a:	93 07       	cpc	r25, r19
 21c:	54 f4       	brge	.+20     	; 0x232 <ballMoviment+0x118>
	{
		ball.y=borderY-ball.height;
 21e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <ball+0x3>
 222:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <ball+0x2>
		//speed+=0.25;
		diry=-1;
 226:	8f ef       	ldi	r24, 0xFF	; 255
 228:	9f ef       	ldi	r25, 0xFF	; 255
 22a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
 22e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
	}
	if(ball.y<16)
 232:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <ball+0x2>
 236:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <ball+0x3>
 23a:	40 97       	sbiw	r24, 0x10	; 16
 23c:	64 f4       	brge	.+24     	; 0x256 <ballMoviment+0x13c>
	{
		ball.y=16;
 23e:	80 e1       	ldi	r24, 0x10	; 16
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <ball+0x3>
 246:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <ball+0x2>
		//speed+=0.25;
		diry=1;
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
 252:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
	}
}
 256:	df 91       	pop	r29
 258:	cf 91       	pop	r28
 25a:	1f 91       	pop	r17
 25c:	0f 91       	pop	r16
 25e:	ff 90       	pop	r15
 260:	ef 90       	pop	r14
 262:	df 90       	pop	r13
 264:	cf 90       	pop	r12
 266:	bf 90       	pop	r11
 268:	af 90       	pop	r10
 26a:	9f 90       	pop	r9
 26c:	8f 90       	pop	r8
 26e:	08 95       	ret

00000270 <playerMoviment>:

void playerMoviment(){
	if(PIND ^= 0b00000100){
 270:	99 b1       	in	r25, 0x09	; 9
 272:	84 e0       	ldi	r24, 0x04	; 4
 274:	89 27       	eor	r24, r25
 276:	89 b9       	out	0x09, r24	; 9
 278:	88 23       	and	r24, r24
 27a:	39 f0       	breq	.+14     	; 0x28a <playerMoviment+0x1a>
		player1.y++;
 27c:	ec e0       	ldi	r30, 0x0C	; 12
 27e:	f1 e0       	ldi	r31, 0x01	; 1
 280:	82 81       	ldd	r24, Z+2	; 0x02
 282:	93 81       	ldd	r25, Z+3	; 0x03
 284:	01 96       	adiw	r24, 0x01	; 1
 286:	93 83       	std	Z+3, r25	; 0x03
 288:	82 83       	std	Z+2, r24	; 0x02
 28a:	08 95       	ret

0000028c <main>:
	}
}

int main(void)
{
	init();
 28c:	0e 94 53 00 	call	0xa6	; 0xa6 <init>
	while(1)
	{
		ballMoviment();
 290:	0e 94 8d 00 	call	0x11a	; 0x11a <ballMoviment>
		playerMoviment();		
 294:	0e 94 38 01 	call	0x270	; 0x270 <playerMoviment>
		render();
 298:	0e 94 61 00 	call	0xc2	; 0xc2 <render>
 29c:	f9 cf       	rjmp	.-14     	; 0x290 <main+0x4>

0000029e <GLCD_BufferWrite>:
				radiusError += xChange;
				xChange += 2;
			}
		}
	}
}
 29e:	66 95       	lsr	r22
 2a0:	66 95       	lsr	r22
 2a2:	66 95       	lsr	r22
 2a4:	e8 2f       	mov	r30, r24
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 e8       	ldi	r24, 0x80	; 128
 2aa:	68 9f       	mul	r22, r24
 2ac:	e0 0d       	add	r30, r0
 2ae:	f1 1d       	adc	r31, r1
 2b0:	11 24       	eor	r1, r1
 2b2:	ef 5c       	subi	r30, 0xCF	; 207
 2b4:	fe 4f       	sbci	r31, 0xFE	; 254
 2b6:	40 83       	st	Z, r20
 2b8:	08 95       	ret

000002ba <GLCD_BufferRead>:
 2ba:	66 95       	lsr	r22
 2bc:	66 95       	lsr	r22
 2be:	66 95       	lsr	r22
 2c0:	e8 2f       	mov	r30, r24
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 e8       	ldi	r24, 0x80	; 128
 2c6:	68 9f       	mul	r22, r24
 2c8:	e0 0d       	add	r30, r0
 2ca:	f1 1d       	adc	r31, r1
 2cc:	11 24       	eor	r1, r1
 2ce:	ef 5c       	subi	r30, 0xCF	; 207
 2d0:	fe 4f       	sbci	r31, 0xFE	; 254
 2d2:	80 81       	ld	r24, Z
 2d4:	08 95       	ret

000002d6 <GLCD_Send>:
 2d6:	0f 93       	push	r16
 2d8:	1f 93       	push	r17
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	c8 2f       	mov	r28, r24
 2e0:	8b 01       	movw	r16, r22
 2e2:	d4 2f       	mov	r29, r20
 2e4:	0e 94 52 04 	call	0x8a4	; 0x8a4 <TWI_BeginTransmission>
 2e8:	88 e7       	ldi	r24, 0x78	; 120
 2ea:	0e 94 64 04 	call	0x8c8	; 0x8c8 <TWI_Transmit>
 2ee:	8c 2f       	mov	r24, r28
 2f0:	0e 94 64 04 	call	0x8c8	; 0x8c8 <TWI_Transmit>
 2f4:	c0 e0       	ldi	r28, 0x00	; 0
 2f6:	07 c0       	rjmp	.+14     	; 0x306 <GLCD_Send+0x30>
 2f8:	f8 01       	movw	r30, r16
 2fa:	ec 0f       	add	r30, r28
 2fc:	f1 1d       	adc	r31, r1
 2fe:	80 81       	ld	r24, Z
 300:	0e 94 64 04 	call	0x8c8	; 0x8c8 <TWI_Transmit>
 304:	cf 5f       	subi	r28, 0xFF	; 255
 306:	cd 17       	cp	r28, r29
 308:	b8 f3       	brcs	.-18     	; 0x2f8 <GLCD_Send+0x22>
 30a:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <TWI_EndTransmission>
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	08 95       	ret

00000318 <GLCD_SendCommand>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	1f 92       	push	r1
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
 322:	89 83       	std	Y+1, r24	; 0x01
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	be 01       	movw	r22, r28
 328:	6f 5f       	subi	r22, 0xFF	; 255
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <GLCD_Send>
 332:	0f 90       	pop	r0
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <GLCD_Render>:
 33a:	cf 93       	push	r28
 33c:	81 e2       	ldi	r24, 0x21	; 33
 33e:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 348:	8f e7       	ldi	r24, 0x7F	; 127
 34a:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 34e:	82 e2       	ldi	r24, 0x22	; 34
 350:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 35a:	87 e0       	ldi	r24, 0x07	; 7
 35c:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 360:	c0 e0       	ldi	r28, 0x00	; 0
 362:	0b c0       	rjmp	.+22     	; 0x37a <GLCD_Render+0x40>
 364:	80 e1       	ldi	r24, 0x10	; 16
 366:	c8 9f       	mul	r28, r24
 368:	b0 01       	movw	r22, r0
 36a:	11 24       	eor	r1, r1
 36c:	6f 5c       	subi	r22, 0xCF	; 207
 36e:	7e 4f       	sbci	r23, 0xFE	; 254
 370:	40 e1       	ldi	r20, 0x10	; 16
 372:	80 e4       	ldi	r24, 0x40	; 64
 374:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <GLCD_Send>
 378:	cf 5f       	subi	r28, 0xFF	; 255
 37a:	c0 34       	cpi	r28, 0x40	; 64
 37c:	98 f3       	brcs	.-26     	; 0x364 <GLCD_Render+0x2a>
 37e:	cf 91       	pop	r28
 380:	08 95       	ret

00000382 <GLCD_GotoX>:
 382:	88 23       	and	r24, r24
 384:	14 f0       	brlt	.+4      	; 0x38a <GLCD_GotoX+0x8>
 386:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__GLCD>
 38a:	08 95       	ret

0000038c <GLCD_GotoY>:
 38c:	80 34       	cpi	r24, 0x40	; 64
 38e:	10 f4       	brcc	.+4      	; 0x394 <GLCD_GotoY+0x8>
 390:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <__GLCD+0x1>
 394:	08 95       	ret

00000396 <GLCD_GotoXY>:
 396:	cf 93       	push	r28
 398:	c6 2f       	mov	r28, r22
 39a:	0e 94 c1 01 	call	0x382	; 0x382 <GLCD_GotoX>
 39e:	8c 2f       	mov	r24, r28
 3a0:	0e 94 c6 01 	call	0x38c	; 0x38c <GLCD_GotoY>
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <GLCD_Setup>:
 3a8:	0e 94 39 04 	call	0x872	; 0x872 <TWI_Setup>
 3ac:	8e ea       	ldi	r24, 0xAE	; 174
 3ae:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3b2:	85 ed       	ldi	r24, 0xD5	; 213
 3b4:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3b8:	80 ef       	ldi	r24, 0xF0	; 240
 3ba:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3be:	88 ea       	ldi	r24, 0xA8	; 168
 3c0:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3c4:	8f e3       	ldi	r24, 0x3F	; 63
 3c6:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3ca:	83 ed       	ldi	r24, 0xD3	; 211
 3cc:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3d6:	8d e8       	ldi	r24, 0x8D	; 141
 3d8:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3dc:	84 e1       	ldi	r24, 0x14	; 20
 3de:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3e2:	80 e4       	ldi	r24, 0x40	; 64
 3e4:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3e8:	80 e2       	ldi	r24, 0x20	; 32
 3ea:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3f4:	81 ea       	ldi	r24, 0xA1	; 161
 3f6:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 3fa:	88 ec       	ldi	r24, 0xC8	; 200
 3fc:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 400:	8a ed       	ldi	r24, 0xDA	; 218
 402:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 406:	82 e1       	ldi	r24, 0x12	; 18
 408:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 40c:	81 e8       	ldi	r24, 0x81	; 129
 40e:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 412:	8f ef       	ldi	r24, 0xFF	; 255
 414:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 418:	89 ed       	ldi	r24, 0xD9	; 217
 41a:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 41e:	81 ef       	ldi	r24, 0xF1	; 241
 420:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 424:	8b ed       	ldi	r24, 0xDB	; 219
 426:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 42a:	80 e2       	ldi	r24, 0x20	; 32
 42c:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 430:	84 ea       	ldi	r24, 0xA4	; 164
 432:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 436:	86 ea       	ldi	r24, 0xA6	; 166
 438:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 43c:	8e e2       	ldi	r24, 0x2E	; 46
 43e:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 442:	8f ea       	ldi	r24, 0xAF	; 175
 444:	0e 94 8c 01 	call	0x318	; 0x318 <GLCD_SendCommand>
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
 450:	e8 e2       	ldi	r30, 0x28	; 40
 452:	f1 e0       	ldi	r31, 0x01	; 1
 454:	86 ea       	ldi	r24, 0xA6	; 166
 456:	82 83       	std	Z+2, r24	; 0x02
 458:	17 82       	std	Z+7, r1	; 0x07
 45a:	16 82       	std	Z+6, r1	; 0x06
 45c:	15 82       	std	Z+5, r1	; 0x05
 45e:	11 82       	std	Z+1, r1	; 0x01
 460:	10 82       	st	Z, r1
 462:	08 95       	ret

00000464 <GLCD_SetPixel>:
 464:	ff 92       	push	r15
 466:	0f 93       	push	r16
 468:	1f 93       	push	r17
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	c6 2f       	mov	r28, r22
 470:	14 2f       	mov	r17, r20
 472:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
 476:	e8 e2       	ldi	r30, 0x28	; 40
 478:	f1 e0       	ldi	r31, 0x01	; 1
 47a:	f1 80       	ldd	r15, Z+1	; 0x01
 47c:	d0 81       	ld	r29, Z
 47e:	6f 2d       	mov	r22, r15
 480:	8d 2f       	mov	r24, r29
 482:	0e 94 5d 01 	call	0x2ba	; 0x2ba <GLCD_BufferRead>
 486:	1f 3f       	cpi	r17, 0xFF	; 255
 488:	79 f4       	brne	.+30     	; 0x4a8 <GLCD_SetPixel+0x44>
 48a:	c7 70       	andi	r28, 0x07	; 7
 48c:	01 e0       	ldi	r16, 0x01	; 1
 48e:	10 e0       	ldi	r17, 0x00	; 0
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	04 c0       	rjmp	.+8      	; 0x49e <GLCD_SetPixel+0x3a>
 496:	00 0f       	add	r16, r16
 498:	11 1f       	adc	r17, r17
 49a:	22 1f       	adc	r18, r18
 49c:	33 1f       	adc	r19, r19
 49e:	ca 95       	dec	r28
 4a0:	d2 f7       	brpl	.-12     	; 0x496 <GLCD_SetPixel+0x32>
 4a2:	48 2f       	mov	r20, r24
 4a4:	40 2b       	or	r20, r16
 4a6:	0f c0       	rjmp	.+30     	; 0x4c6 <GLCD_SetPixel+0x62>
 4a8:	c7 70       	andi	r28, 0x07	; 7
 4aa:	01 e0       	ldi	r16, 0x01	; 1
 4ac:	10 e0       	ldi	r17, 0x00	; 0
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	04 c0       	rjmp	.+8      	; 0x4bc <GLCD_SetPixel+0x58>
 4b4:	00 0f       	add	r16, r16
 4b6:	11 1f       	adc	r17, r17
 4b8:	22 1f       	adc	r18, r18
 4ba:	33 1f       	adc	r19, r19
 4bc:	ca 95       	dec	r28
 4be:	d2 f7       	brpl	.-12     	; 0x4b4 <GLCD_SetPixel+0x50>
 4c0:	00 95       	com	r16
 4c2:	40 2f       	mov	r20, r16
 4c4:	48 23       	and	r20, r24
 4c6:	6f 2d       	mov	r22, r15
 4c8:	8d 2f       	mov	r24, r29
 4ca:	0e 94 4f 01 	call	0x29e	; 0x29e <GLCD_BufferWrite>
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	1f 91       	pop	r17
 4d4:	0f 91       	pop	r16
 4d6:	ff 90       	pop	r15
 4d8:	08 95       	ret

000004da <GLCD_SetPixels>:
 4da:	6f 92       	push	r6
 4dc:	7f 92       	push	r7
 4de:	8f 92       	push	r8
 4e0:	9f 92       	push	r9
 4e2:	af 92       	push	r10
 4e4:	bf 92       	push	r11
 4e6:	cf 92       	push	r12
 4e8:	df 92       	push	r13
 4ea:	ef 92       	push	r14
 4ec:	ff 92       	push	r15
 4ee:	0f 93       	push	r16
 4f0:	1f 93       	push	r17
 4f2:	cf 93       	push	r28
 4f4:	df 93       	push	r29
 4f6:	88 23       	and	r24, r24
 4f8:	0c f4       	brge	.+2      	; 0x4fc <GLCD_SetPixels+0x22>
 4fa:	a7 c0       	rjmp	.+334    	; 0x64a <GLCD_SetPixels+0x170>
 4fc:	44 23       	and	r20, r20
 4fe:	0c f4       	brge	.+2      	; 0x502 <GLCD_SetPixels+0x28>
 500:	a4 c0       	rjmp	.+328    	; 0x64a <GLCD_SetPixels+0x170>
 502:	60 34       	cpi	r22, 0x40	; 64
 504:	08 f0       	brcs	.+2      	; 0x508 <GLCD_SetPixels+0x2e>
 506:	a1 c0       	rjmp	.+322    	; 0x64a <GLCD_SetPixels+0x170>
 508:	20 34       	cpi	r18, 0x40	; 64
 50a:	08 f0       	brcs	.+2      	; 0x50e <GLCD_SetPixels+0x34>
 50c:	9e c0       	rjmp	.+316    	; 0x64a <GLCD_SetPixels+0x170>
 50e:	26 1b       	sub	r18, r22
 510:	99 24       	eor	r9, r9
 512:	93 94       	inc	r9
 514:	92 0e       	add	r9, r18
 516:	48 1b       	sub	r20, r24
 518:	d1 e0       	ldi	r29, 0x01	; 1
 51a:	d4 0f       	add	r29, r20
 51c:	96 2f       	mov	r25, r22
 51e:	97 70       	andi	r25, 0x07	; 7
 520:	16 2f       	mov	r17, r22
 522:	19 1b       	sub	r17, r25
 524:	e9 2c       	mov	r14, r9
 526:	f1 2c       	mov	r15, r1
 528:	28 e0       	ldi	r18, 0x08	; 8
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	29 1b       	sub	r18, r25
 52e:	31 09       	sbc	r19, r1
 530:	e2 16       	cp	r14, r18
 532:	f3 06       	cpc	r15, r19
 534:	7c f4       	brge	.+30     	; 0x554 <GLCD_SetPixels+0x7a>
 536:	28 e0       	ldi	r18, 0x08	; 8
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	2e 19       	sub	r18, r14
 53c:	3f 09       	sbc	r19, r15
 53e:	4f ef       	ldi	r20, 0xFF	; 255
 540:	50 e0       	ldi	r21, 0x00	; 0
 542:	6a 01       	movw	r12, r20
 544:	02 c0       	rjmp	.+4      	; 0x54a <GLCD_SetPixels+0x70>
 546:	d5 94       	asr	r13
 548:	c7 94       	ror	r12
 54a:	2a 95       	dec	r18
 54c:	e2 f7       	brpl	.-8      	; 0x546 <GLCD_SetPixels+0x6c>
 54e:	2c 2d       	mov	r18, r12
 550:	b9 2c       	mov	r11, r9
 552:	04 c0       	rjmp	.+8      	; 0x55c <GLCD_SetPixels+0x82>
 554:	28 e0       	ldi	r18, 0x08	; 8
 556:	b2 2e       	mov	r11, r18
 558:	b9 1a       	sub	r11, r25
 55a:	2f ef       	ldi	r18, 0xFF	; 255
 55c:	a8 2e       	mov	r10, r24
 55e:	c2 2e       	mov	r12, r18
 560:	d1 2c       	mov	r13, r1
 562:	02 c0       	rjmp	.+4      	; 0x568 <GLCD_SetPixels+0x8e>
 564:	cc 0c       	add	r12, r12
 566:	dd 1c       	adc	r13, r13
 568:	9a 95       	dec	r25
 56a:	e2 f7       	brpl	.-8      	; 0x564 <GLCD_SetPixels+0x8a>
 56c:	6c 2c       	mov	r6, r12
 56e:	61 2f       	mov	r22, r17
 570:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
 574:	81 2c       	mov	r8, r1
 576:	19 c0       	rjmp	.+50     	; 0x5aa <GLCD_SetPixels+0xd0>
 578:	e8 e2       	ldi	r30, 0x28	; 40
 57a:	f1 e0       	ldi	r31, 0x01	; 1
 57c:	71 80       	ldd	r7, Z+1	; 0x01
 57e:	c0 81       	ld	r28, Z
 580:	67 2d       	mov	r22, r7
 582:	8c 2f       	mov	r24, r28
 584:	0e 94 5d 01 	call	0x2ba	; 0x2ba <GLCD_BufferRead>
 588:	0f 3f       	cpi	r16, 0xFF	; 255
 58a:	19 f4       	brne	.+6      	; 0x592 <GLCD_SetPixels+0xb8>
 58c:	46 2d       	mov	r20, r6
 58e:	48 2b       	or	r20, r24
 590:	03 c0       	rjmp	.+6      	; 0x598 <GLCD_SetPixels+0xbe>
 592:	4c 2d       	mov	r20, r12
 594:	40 95       	com	r20
 596:	48 23       	and	r20, r24
 598:	81 e0       	ldi	r24, 0x01	; 1
 59a:	8c 0f       	add	r24, r28
 59c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__GLCD>
 5a0:	67 2d       	mov	r22, r7
 5a2:	8c 2f       	mov	r24, r28
 5a4:	0e 94 4f 01 	call	0x29e	; 0x29e <GLCD_BufferWrite>
 5a8:	83 94       	inc	r8
 5aa:	8d 16       	cp	r8, r29
 5ac:	28 f3       	brcs	.-54     	; 0x578 <GLCD_SetPixels+0x9e>
 5ae:	16 c0       	rjmp	.+44     	; 0x5dc <GLCD_SetPixels+0x102>
 5b0:	88 e0       	ldi	r24, 0x08	; 8
 5b2:	b8 0e       	add	r11, r24
 5b4:	18 5f       	subi	r17, 0xF8	; 248
 5b6:	61 2f       	mov	r22, r17
 5b8:	8a 2d       	mov	r24, r10
 5ba:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
 5be:	c0 e0       	ldi	r28, 0x00	; 0
 5c0:	0b c0       	rjmp	.+22     	; 0x5d8 <GLCD_SetPixels+0xfe>
 5c2:	e8 e2       	ldi	r30, 0x28	; 40
 5c4:	f1 e0       	ldi	r31, 0x01	; 1
 5c6:	61 81       	ldd	r22, Z+1	; 0x01
 5c8:	80 81       	ld	r24, Z
 5ca:	91 e0       	ldi	r25, 0x01	; 1
 5cc:	98 0f       	add	r25, r24
 5ce:	90 83       	st	Z, r25
 5d0:	40 2f       	mov	r20, r16
 5d2:	0e 94 4f 01 	call	0x29e	; 0x29e <GLCD_BufferWrite>
 5d6:	cf 5f       	subi	r28, 0xFF	; 255
 5d8:	cd 17       	cp	r28, r29
 5da:	98 f3       	brcs	.-26     	; 0x5c2 <GLCD_SetPixels+0xe8>
 5dc:	8b 2d       	mov	r24, r11
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	9c 01       	movw	r18, r24
 5e2:	28 5f       	subi	r18, 0xF8	; 248
 5e4:	3f 4f       	sbci	r19, 0xFF	; 255
 5e6:	e2 16       	cp	r14, r18
 5e8:	f3 06       	cpc	r15, r19
 5ea:	14 f7       	brge	.-60     	; 0x5b0 <GLCD_SetPixels+0xd6>
 5ec:	b9 14       	cp	r11, r9
 5ee:	68 f5       	brcc	.+90     	; 0x64a <GLCD_SetPixels+0x170>
 5f0:	e8 1a       	sub	r14, r24
 5f2:	f9 0a       	sbc	r15, r25
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <GLCD_SetPixels+0x124>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	ea 94       	dec	r14
 600:	e2 f7       	brpl	.-8      	; 0x5fa <GLCD_SetPixels+0x120>
 602:	e8 2e       	mov	r14, r24
 604:	e0 94       	com	r14
 606:	68 e0       	ldi	r22, 0x08	; 8
 608:	61 0f       	add	r22, r17
 60a:	8a 2d       	mov	r24, r10
 60c:	0e 94 cb 01 	call	0x396	; 0x396 <GLCD_GotoXY>
 610:	10 e0       	ldi	r17, 0x00	; 0
 612:	19 c0       	rjmp	.+50     	; 0x646 <GLCD_SetPixels+0x16c>
 614:	e8 e2       	ldi	r30, 0x28	; 40
 616:	f1 e0       	ldi	r31, 0x01	; 1
 618:	f1 80       	ldd	r15, Z+1	; 0x01
 61a:	c0 81       	ld	r28, Z
 61c:	6f 2d       	mov	r22, r15
 61e:	8c 2f       	mov	r24, r28
 620:	0e 94 5d 01 	call	0x2ba	; 0x2ba <GLCD_BufferRead>
 624:	0f 3f       	cpi	r16, 0xFF	; 255
 626:	19 f4       	brne	.+6      	; 0x62e <GLCD_SetPixels+0x154>
 628:	4e 2d       	mov	r20, r14
 62a:	48 2b       	or	r20, r24
 62c:	03 c0       	rjmp	.+6      	; 0x634 <GLCD_SetPixels+0x15a>
 62e:	4e 2d       	mov	r20, r14
 630:	40 95       	com	r20
 632:	48 23       	and	r20, r24
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	8c 0f       	add	r24, r28
 638:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__GLCD>
 63c:	6f 2d       	mov	r22, r15
 63e:	8c 2f       	mov	r24, r28
 640:	0e 94 4f 01 	call	0x29e	; 0x29e <GLCD_BufferWrite>
 644:	1f 5f       	subi	r17, 0xFF	; 255
 646:	1d 17       	cp	r17, r29
 648:	28 f3       	brcs	.-54     	; 0x614 <GLCD_SetPixels+0x13a>
 64a:	df 91       	pop	r29
 64c:	cf 91       	pop	r28
 64e:	1f 91       	pop	r17
 650:	0f 91       	pop	r16
 652:	ff 90       	pop	r15
 654:	ef 90       	pop	r14
 656:	df 90       	pop	r13
 658:	cf 90       	pop	r12
 65a:	bf 90       	pop	r11
 65c:	af 90       	pop	r10
 65e:	9f 90       	pop	r9
 660:	8f 90       	pop	r8
 662:	7f 90       	pop	r7
 664:	6f 90       	pop	r6
 666:	08 95       	ret

00000668 <GLCD_DrawLine>:
 668:	8f 92       	push	r8
 66a:	9f 92       	push	r9
 66c:	af 92       	push	r10
 66e:	bf 92       	push	r11
 670:	cf 92       	push	r12
 672:	df 92       	push	r13
 674:	ef 92       	push	r14
 676:	ff 92       	push	r15
 678:	0f 93       	push	r16
 67a:	1f 93       	push	r17
 67c:	cf 93       	push	r28
 67e:	df 93       	push	r29
 680:	c8 2f       	mov	r28, r24
 682:	d6 2f       	mov	r29, r22
 684:	14 2f       	mov	r17, r20
 686:	88 23       	and	r24, r24
 688:	0c f4       	brge	.+2      	; 0x68c <GLCD_DrawLine+0x24>
 68a:	74 c0       	rjmp	.+232    	; 0x774 <GLCD_DrawLine+0x10c>
 68c:	44 23       	and	r20, r20
 68e:	0c f4       	brge	.+2      	; 0x692 <GLCD_DrawLine+0x2a>
 690:	71 c0       	rjmp	.+226    	; 0x774 <GLCD_DrawLine+0x10c>
 692:	60 34       	cpi	r22, 0x40	; 64
 694:	08 f0       	brcs	.+2      	; 0x698 <GLCD_DrawLine+0x30>
 696:	6e c0       	rjmp	.+220    	; 0x774 <GLCD_DrawLine+0x10c>
 698:	20 34       	cpi	r18, 0x40	; 64
 69a:	08 f0       	brcs	.+2      	; 0x69e <GLCD_DrawLine+0x36>
 69c:	6b c0       	rjmp	.+214    	; 0x774 <GLCD_DrawLine+0x10c>
 69e:	84 13       	cpse	r24, r20
 6a0:	0a c0       	rjmp	.+20     	; 0x6b6 <GLCD_DrawLine+0x4e>
 6a2:	26 17       	cp	r18, r22
 6a4:	10 f4       	brcc	.+4      	; 0x6aa <GLCD_DrawLine+0x42>
 6a6:	d2 2f       	mov	r29, r18
 6a8:	26 2f       	mov	r18, r22
 6aa:	4c 2f       	mov	r20, r28
 6ac:	6d 2f       	mov	r22, r29
 6ae:	8c 2f       	mov	r24, r28
 6b0:	0e 94 6d 02 	call	0x4da	; 0x4da <GLCD_SetPixels>
 6b4:	5f c0       	rjmp	.+190    	; 0x774 <GLCD_DrawLine+0x10c>
 6b6:	62 13       	cpse	r22, r18
 6b8:	0e c0       	rjmp	.+28     	; 0x6d6 <GLCD_DrawLine+0x6e>
 6ba:	48 17       	cp	r20, r24
 6bc:	48 f4       	brcc	.+18     	; 0x6d0 <GLCD_DrawLine+0x68>
 6be:	c4 2f       	mov	r28, r20
 6c0:	18 2f       	mov	r17, r24
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <GLCD_DrawLine+0x68>
 6c4:	40 2f       	mov	r20, r16
 6c6:	6d 2f       	mov	r22, r29
 6c8:	8c 2f       	mov	r24, r28
 6ca:	0e 94 32 02 	call	0x464	; 0x464 <GLCD_SetPixel>
 6ce:	cf 5f       	subi	r28, 0xFF	; 255
 6d0:	1c 17       	cp	r17, r28
 6d2:	c0 f7       	brcc	.-16     	; 0x6c4 <GLCD_DrawLine+0x5c>
 6d4:	4f c0       	rjmp	.+158    	; 0x774 <GLCD_DrawLine+0x10c>
 6d6:	26 17       	cp	r18, r22
 6d8:	28 f4       	brcc	.+10     	; 0x6e4 <GLCD_DrawLine+0x7c>
 6da:	c6 2e       	mov	r12, r22
 6dc:	d1 2c       	mov	r13, r1
 6de:	c2 1a       	sub	r12, r18
 6e0:	d1 08       	sbc	r13, r1
 6e2:	04 c0       	rjmp	.+8      	; 0x6ec <GLCD_DrawLine+0x84>
 6e4:	c2 2e       	mov	r12, r18
 6e6:	d1 2c       	mov	r13, r1
 6e8:	c6 1a       	sub	r12, r22
 6ea:	d1 08       	sbc	r13, r1
 6ec:	1c 17       	cp	r17, r28
 6ee:	28 f4       	brcc	.+10     	; 0x6fa <GLCD_DrawLine+0x92>
 6f0:	ac 2e       	mov	r10, r28
 6f2:	b1 2c       	mov	r11, r1
 6f4:	a1 1a       	sub	r10, r17
 6f6:	b1 08       	sbc	r11, r1
 6f8:	04 c0       	rjmp	.+8      	; 0x702 <GLCD_DrawLine+0x9a>
 6fa:	a1 2e       	mov	r10, r17
 6fc:	b1 2c       	mov	r11, r1
 6fe:	ac 1a       	sub	r10, r28
 700:	b1 08       	sbc	r11, r1
 702:	ac 14       	cp	r10, r12
 704:	bd 04       	cpc	r11, r13
 706:	34 f4       	brge	.+12     	; 0x714 <GLCD_DrawLine+0xac>
 708:	81 2f       	mov	r24, r17
 70a:	12 2f       	mov	r17, r18
 70c:	28 2f       	mov	r18, r24
 70e:	8c 2f       	mov	r24, r28
 710:	cd 2f       	mov	r28, r29
 712:	d8 2f       	mov	r29, r24
 714:	1c 17       	cp	r17, r28
 716:	30 f4       	brcc	.+12     	; 0x724 <GLCD_DrawLine+0xbc>
 718:	8d 2f       	mov	r24, r29
 71a:	d2 2f       	mov	r29, r18
 71c:	28 2f       	mov	r18, r24
 71e:	8c 2f       	mov	r24, r28
 720:	c1 2f       	mov	r28, r17
 722:	18 2f       	mov	r17, r24
 724:	91 2e       	mov	r9, r17
 726:	9c 1a       	sub	r9, r28
 728:	d2 17       	cp	r29, r18
 72a:	18 f4       	brcc	.+6      	; 0x732 <GLCD_DrawLine+0xca>
 72c:	e2 2e       	mov	r14, r18
 72e:	ed 1a       	sub	r14, r29
 730:	02 c0       	rjmp	.+4      	; 0x736 <GLCD_DrawLine+0xce>
 732:	ed 2e       	mov	r14, r29
 734:	e2 1a       	sub	r14, r18
 736:	f9 2c       	mov	r15, r9
 738:	f6 94       	lsr	r15
 73a:	d2 17       	cp	r29, r18
 73c:	18 f4       	brcc	.+6      	; 0x744 <GLCD_DrawLine+0xdc>
 73e:	88 24       	eor	r8, r8
 740:	83 94       	inc	r8
 742:	16 c0       	rjmp	.+44     	; 0x770 <GLCD_DrawLine+0x108>
 744:	88 24       	eor	r8, r8
 746:	8a 94       	dec	r8
 748:	13 c0       	rjmp	.+38     	; 0x770 <GLCD_DrawLine+0x108>
 74a:	ac 14       	cp	r10, r12
 74c:	bd 04       	cpc	r11, r13
 74e:	34 f4       	brge	.+12     	; 0x75c <GLCD_DrawLine+0xf4>
 750:	40 2f       	mov	r20, r16
 752:	6c 2f       	mov	r22, r28
 754:	8d 2f       	mov	r24, r29
 756:	0e 94 32 02 	call	0x464	; 0x464 <GLCD_SetPixel>
 75a:	05 c0       	rjmp	.+10     	; 0x766 <GLCD_DrawLine+0xfe>
 75c:	40 2f       	mov	r20, r16
 75e:	6d 2f       	mov	r22, r29
 760:	8c 2f       	mov	r24, r28
 762:	0e 94 32 02 	call	0x464	; 0x464 <GLCD_SetPixel>
 766:	fe 18       	sub	r15, r14
 768:	12 f4       	brpl	.+4      	; 0x76e <GLCD_DrawLine+0x106>
 76a:	d8 0d       	add	r29, r8
 76c:	f9 0c       	add	r15, r9
 76e:	cf 5f       	subi	r28, 0xFF	; 255
 770:	1c 17       	cp	r17, r28
 772:	58 f7       	brcc	.-42     	; 0x74a <GLCD_DrawLine+0xe2>
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
 778:	1f 91       	pop	r17
 77a:	0f 91       	pop	r16
 77c:	ff 90       	pop	r15
 77e:	ef 90       	pop	r14
 780:	df 90       	pop	r13
 782:	cf 90       	pop	r12
 784:	bf 90       	pop	r11
 786:	af 90       	pop	r10
 788:	9f 90       	pop	r9
 78a:	8f 90       	pop	r8
 78c:	08 95       	ret

0000078e <GLCD_DrawRectangle>:
 78e:	df 92       	push	r13
 790:	ef 92       	push	r14
 792:	ff 92       	push	r15
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	88 23       	and	r24, r24
 79e:	0c f4       	brge	.+2      	; 0x7a2 <GLCD_DrawRectangle+0x14>
 7a0:	45 c0       	rjmp	.+138    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 7a2:	44 23       	and	r20, r20
 7a4:	0c f4       	brge	.+2      	; 0x7a8 <GLCD_DrawRectangle+0x1a>
 7a6:	42 c0       	rjmp	.+132    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 7a8:	60 34       	cpi	r22, 0x40	; 64
 7aa:	08 f0       	brcs	.+2      	; 0x7ae <GLCD_DrawRectangle+0x20>
 7ac:	3f c0       	rjmp	.+126    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 7ae:	20 34       	cpi	r18, 0x40	; 64
 7b0:	e8 f5       	brcc	.+122    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 7b2:	d0 2f       	mov	r29, r16
 7b4:	12 2f       	mov	r17, r18
 7b6:	d4 2e       	mov	r13, r20
 7b8:	f6 2e       	mov	r15, r22
 7ba:	e8 2e       	mov	r14, r24
 7bc:	48 17       	cp	r20, r24
 7be:	18 f0       	brcs	.+6      	; 0x7c6 <GLCD_DrawRectangle+0x38>
 7c0:	04 2f       	mov	r16, r20
 7c2:	c8 2f       	mov	r28, r24
 7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <GLCD_DrawRectangle+0x4a>
 7c6:	08 2f       	mov	r16, r24
 7c8:	c4 2f       	mov	r28, r20
 7ca:	06 c0       	rjmp	.+12     	; 0x7d8 <GLCD_DrawRectangle+0x4a>
 7cc:	4d 2f       	mov	r20, r29
 7ce:	6f 2d       	mov	r22, r15
 7d0:	8c 2f       	mov	r24, r28
 7d2:	0e 94 32 02 	call	0x464	; 0x464 <GLCD_SetPixel>
 7d6:	cf 5f       	subi	r28, 0xFF	; 255
 7d8:	0c 17       	cp	r16, r28
 7da:	c0 f7       	brcc	.-16     	; 0x7cc <GLCD_DrawRectangle+0x3e>
 7dc:	de 14       	cp	r13, r14
 7de:	18 f0       	brcs	.+6      	; 0x7e6 <GLCD_DrawRectangle+0x58>
 7e0:	0d 2d       	mov	r16, r13
 7e2:	ce 2d       	mov	r28, r14
 7e4:	09 c0       	rjmp	.+18     	; 0x7f8 <GLCD_DrawRectangle+0x6a>
 7e6:	0e 2d       	mov	r16, r14
 7e8:	cd 2d       	mov	r28, r13
 7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <GLCD_DrawRectangle+0x6a>
 7ec:	4d 2f       	mov	r20, r29
 7ee:	61 2f       	mov	r22, r17
 7f0:	8c 2f       	mov	r24, r28
 7f2:	0e 94 32 02 	call	0x464	; 0x464 <GLCD_SetPixel>
 7f6:	cf 5f       	subi	r28, 0xFF	; 255
 7f8:	0c 17       	cp	r16, r28
 7fa:	c0 f7       	brcc	.-16     	; 0x7ec <GLCD_DrawRectangle+0x5e>
 7fc:	1f 15       	cp	r17, r15
 7fe:	18 f0       	brcs	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 800:	21 2f       	mov	r18, r17
 802:	6f 2d       	mov	r22, r15
 804:	02 c0       	rjmp	.+4      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 806:	2f 2d       	mov	r18, r15
 808:	61 2f       	mov	r22, r17
 80a:	0d 2f       	mov	r16, r29
 80c:	4e 2d       	mov	r20, r14
 80e:	8e 2d       	mov	r24, r14
 810:	0e 94 6d 02 	call	0x4da	; 0x4da <GLCD_SetPixels>
 814:	1f 15       	cp	r17, r15
 816:	18 f0       	brcs	.+6      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 818:	21 2f       	mov	r18, r17
 81a:	6f 2d       	mov	r22, r15
 81c:	02 c0       	rjmp	.+4      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 81e:	2f 2d       	mov	r18, r15
 820:	61 2f       	mov	r22, r17
 822:	0d 2f       	mov	r16, r29
 824:	4d 2d       	mov	r20, r13
 826:	8d 2d       	mov	r24, r13
 828:	0e 94 6d 02 	call	0x4da	; 0x4da <GLCD_SetPixels>
 82c:	df 91       	pop	r29
 82e:	cf 91       	pop	r28
 830:	1f 91       	pop	r17
 832:	0f 91       	pop	r16
 834:	ff 90       	pop	r15
 836:	ef 90       	pop	r14
 838:	df 90       	pop	r13
 83a:	08 95       	ret

0000083c <GLCD_FillScreen>:

void GLCD_FillScreen(enum Color_t Color)
{
 83c:	1f 93       	push	r17
 83e:	cf 93       	push	r28
 840:	df 93       	push	r29
 842:	18 2f       	mov	r17, r24
	uint8_t i, j;

	for (j = 0 ; j < __GLCD_Screen_Height ; j += __GLCD_Screen_Line_Height)
 844:	d0 e0       	ldi	r29, 0x00	; 0
 846:	0b c0       	rjmp	.+22     	; 0x85e <GLCD_FillScreen+0x22>
		for (i = 0 ; i < __GLCD_Screen_Width ; i++)
			GLCD_BufferWrite(i, j, Color);
 848:	41 2f       	mov	r20, r17
 84a:	6d 2f       	mov	r22, r29
 84c:	8c 2f       	mov	r24, r28
 84e:	0e 94 4f 01 	call	0x29e	; 0x29e <GLCD_BufferWrite>
void GLCD_FillScreen(enum Color_t Color)
{
	uint8_t i, j;

	for (j = 0 ; j < __GLCD_Screen_Height ; j += __GLCD_Screen_Line_Height)
		for (i = 0 ; i < __GLCD_Screen_Width ; i++)
 852:	cf 5f       	subi	r28, 0xFF	; 255
 854:	01 c0       	rjmp	.+2      	; 0x858 <GLCD_FillScreen+0x1c>
 856:	c0 e0       	ldi	r28, 0x00	; 0
 858:	cc 23       	and	r28, r28
 85a:	b4 f7       	brge	.-20     	; 0x848 <GLCD_FillScreen+0xc>

void GLCD_FillScreen(enum Color_t Color)
{
	uint8_t i, j;

	for (j = 0 ; j < __GLCD_Screen_Height ; j += __GLCD_Screen_Line_Height)
 85c:	d8 5f       	subi	r29, 0xF8	; 248
 85e:	d0 34       	cpi	r29, 0x40	; 64
 860:	d0 f3       	brcs	.-12     	; 0x856 <GLCD_FillScreen+0x1a>
		for (i = 0 ; i < __GLCD_Screen_Width ; i++)
			GLCD_BufferWrite(i, j, Color);
}
 862:	df 91       	pop	r29
 864:	cf 91       	pop	r28
 866:	1f 91       	pop	r17
 868:	08 95       	ret

0000086a <GLCD_Clear>:
	GLCD_SendCommand(Contrast);
}

void GLCD_Clear(void)
{
	GLCD_FillScreen(GLCD_White);
 86a:	80 e0       	ldi	r24, 0x00	; 0
 86c:	0e 94 1e 04 	call	0x83c	; 0x83c <GLCD_FillScreen>
 870:	08 95       	ret

00000872 <TWI_Setup>:
//----- Functions -------------//
//Setup TWI hardwarw.
void TWI_Setup(void)
{
	//TWI pins as outputs
	PinMode(TWI_SDA, Output);
 872:	87 b1       	in	r24, 0x07	; 7
 874:	80 61       	ori	r24, 0x10	; 16
 876:	87 b9       	out	0x07, r24	; 7
	PinMode(TWI_SCL, Output);
 878:	87 b1       	in	r24, 0x07	; 7
 87a:	80 62       	ori	r24, 0x20	; 32
 87c:	87 b9       	out	0x07, r24	; 7
	//Activate internal pull-up resistors
	DigitalWrite(TWI_SDA, High);
 87e:	88 b1       	in	r24, 0x08	; 8
 880:	80 61       	ori	r24, 0x10	; 16
 882:	88 b9       	out	0x08, r24	; 8
	DigitalWrite(TWI_SCL, High);
 884:	88 b1       	in	r24, 0x08	; 8
 886:	80 62       	ori	r24, 0x20	; 32
 888:	88 b9       	out	0x08, r24	; 8

	//Initialize TWI prescaler and bit rate
	TWSR = 0x00;	//Prescaler = 1
 88a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = (uint8_t)(((F_CPU / F_SCL) - 16) / 2);
 88e:	88 e4       	ldi	r24, 0x48	; 72
 890:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	//F_SCL = F_CPU / (16 + 2 * TWBR * PRESCALER)
	//TWBR = ((F_CPU / F_SCL) - 16) / (2 * PRESCALER)

	//Enable TWI  module
	TWCR = (1<<TWEN);
 894:	84 e0       	ldi	r24, 0x04	; 4
 896:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 89a:	08 95       	ret

0000089c <TWI_Status>:
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
 89c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
}
 8a0:	88 7f       	andi	r24, 0xF8	; 248
 8a2:	08 95       	ret

000008a4 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 8a4:	84 ea       	ldi	r24, 0xA4	; 164
 8a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
 8aa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 8ae:	88 23       	and	r24, r24
 8b0:	e4 f7       	brge	.-8      	; 0x8aa <TWI_BeginTransmission+0x6>

	//Return status register
	return (TWI_Status());
 8b2:	0e 94 4e 04 	call	0x89c	; 0x89c <TWI_Status>
}
 8b6:	08 95       	ret

000008b8 <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
 8b8:	85 ed       	ldi	r24, 0xD5	; 213
 8ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
 8be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 8c2:	84 fd       	sbrc	r24, 4
 8c4:	fc cf       	rjmp	.-8      	; 0x8be <TWI_EndTransmission+0x6>
}
 8c6:	08 95       	ret

000008c8 <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(const uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
 8c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
 8cc:	84 e8       	ldi	r24, 0x84	; 132
 8ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
 8d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 8d6:	88 23       	and	r24, r24
 8d8:	e4 f7       	brge	.-8      	; 0x8d2 <TWI_Transmit+0xa>

	//Return status register
	return (TWI_Status());
 8da:	0e 94 4e 04 	call	0x89c	; 0x89c <TWI_Status>
}
 8de:	08 95       	ret

000008e0 <__subsf3>:
 8e0:	50 58       	subi	r21, 0x80	; 128

000008e2 <__addsf3>:
 8e2:	bb 27       	eor	r27, r27
 8e4:	aa 27       	eor	r26, r26
 8e6:	0e 94 88 04 	call	0x910	; 0x910 <__addsf3x>
 8ea:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_round>
 8ee:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscA>
 8f2:	38 f0       	brcs	.+14     	; 0x902 <__stack+0x3>
 8f4:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_pscB>
 8f8:	20 f0       	brcs	.+8      	; 0x902 <__stack+0x3>
 8fa:	39 f4       	brne	.+14     	; 0x90a <__stack+0xb>
 8fc:	9f 3f       	cpi	r25, 0xFF	; 255
 8fe:	19 f4       	brne	.+6      	; 0x906 <__stack+0x7>
 900:	26 f4       	brtc	.+8      	; 0x90a <__stack+0xb>
 902:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_nan>
 906:	0e f4       	brtc	.+2      	; 0x90a <__stack+0xb>
 908:	e0 95       	com	r30
 90a:	e7 fb       	bst	r30, 7
 90c:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>

00000910 <__addsf3x>:
 910:	e9 2f       	mov	r30, r25
 912:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
 916:	58 f3       	brcs	.-42     	; 0x8ee <__addsf3+0xc>
 918:	ba 17       	cp	r27, r26
 91a:	62 07       	cpc	r22, r18
 91c:	73 07       	cpc	r23, r19
 91e:	84 07       	cpc	r24, r20
 920:	95 07       	cpc	r25, r21
 922:	20 f0       	brcs	.+8      	; 0x92c <__addsf3x+0x1c>
 924:	79 f4       	brne	.+30     	; 0x944 <__addsf3x+0x34>
 926:	a6 f5       	brtc	.+104    	; 0x990 <__addsf3x+0x80>
 928:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__fp_zero>
 92c:	0e f4       	brtc	.+2      	; 0x930 <__addsf3x+0x20>
 92e:	e0 95       	com	r30
 930:	0b 2e       	mov	r0, r27
 932:	ba 2f       	mov	r27, r26
 934:	a0 2d       	mov	r26, r0
 936:	0b 01       	movw	r0, r22
 938:	b9 01       	movw	r22, r18
 93a:	90 01       	movw	r18, r0
 93c:	0c 01       	movw	r0, r24
 93e:	ca 01       	movw	r24, r20
 940:	a0 01       	movw	r20, r0
 942:	11 24       	eor	r1, r1
 944:	ff 27       	eor	r31, r31
 946:	59 1b       	sub	r21, r25
 948:	99 f0       	breq	.+38     	; 0x970 <__addsf3x+0x60>
 94a:	59 3f       	cpi	r21, 0xF9	; 249
 94c:	50 f4       	brcc	.+20     	; 0x962 <__addsf3x+0x52>
 94e:	50 3e       	cpi	r21, 0xE0	; 224
 950:	68 f1       	brcs	.+90     	; 0x9ac <__addsf3x+0x9c>
 952:	1a 16       	cp	r1, r26
 954:	f0 40       	sbci	r31, 0x00	; 0
 956:	a2 2f       	mov	r26, r18
 958:	23 2f       	mov	r18, r19
 95a:	34 2f       	mov	r19, r20
 95c:	44 27       	eor	r20, r20
 95e:	58 5f       	subi	r21, 0xF8	; 248
 960:	f3 cf       	rjmp	.-26     	; 0x948 <__addsf3x+0x38>
 962:	46 95       	lsr	r20
 964:	37 95       	ror	r19
 966:	27 95       	ror	r18
 968:	a7 95       	ror	r26
 96a:	f0 40       	sbci	r31, 0x00	; 0
 96c:	53 95       	inc	r21
 96e:	c9 f7       	brne	.-14     	; 0x962 <__addsf3x+0x52>
 970:	7e f4       	brtc	.+30     	; 0x990 <__addsf3x+0x80>
 972:	1f 16       	cp	r1, r31
 974:	ba 0b       	sbc	r27, r26
 976:	62 0b       	sbc	r22, r18
 978:	73 0b       	sbc	r23, r19
 97a:	84 0b       	sbc	r24, r20
 97c:	ba f0       	brmi	.+46     	; 0x9ac <__addsf3x+0x9c>
 97e:	91 50       	subi	r25, 0x01	; 1
 980:	a1 f0       	breq	.+40     	; 0x9aa <__addsf3x+0x9a>
 982:	ff 0f       	add	r31, r31
 984:	bb 1f       	adc	r27, r27
 986:	66 1f       	adc	r22, r22
 988:	77 1f       	adc	r23, r23
 98a:	88 1f       	adc	r24, r24
 98c:	c2 f7       	brpl	.-16     	; 0x97e <__addsf3x+0x6e>
 98e:	0e c0       	rjmp	.+28     	; 0x9ac <__addsf3x+0x9c>
 990:	ba 0f       	add	r27, r26
 992:	62 1f       	adc	r22, r18
 994:	73 1f       	adc	r23, r19
 996:	84 1f       	adc	r24, r20
 998:	48 f4       	brcc	.+18     	; 0x9ac <__addsf3x+0x9c>
 99a:	87 95       	ror	r24
 99c:	77 95       	ror	r23
 99e:	67 95       	ror	r22
 9a0:	b7 95       	ror	r27
 9a2:	f7 95       	ror	r31
 9a4:	9e 3f       	cpi	r25, 0xFE	; 254
 9a6:	08 f0       	brcs	.+2      	; 0x9aa <__addsf3x+0x9a>
 9a8:	b0 cf       	rjmp	.-160    	; 0x90a <__stack+0xb>
 9aa:	93 95       	inc	r25
 9ac:	88 0f       	add	r24, r24
 9ae:	08 f0       	brcs	.+2      	; 0x9b2 <__addsf3x+0xa2>
 9b0:	99 27       	eor	r25, r25
 9b2:	ee 0f       	add	r30, r30
 9b4:	97 95       	ror	r25
 9b6:	87 95       	ror	r24
 9b8:	08 95       	ret

000009ba <__fixsfsi>:
 9ba:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__fixunssfsi>
 9be:	68 94       	set
 9c0:	b1 11       	cpse	r27, r1
 9c2:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
 9c6:	08 95       	ret

000009c8 <__fixunssfsi>:
 9c8:	0e 94 80 05 	call	0xb00	; 0xb00 <__fp_splitA>
 9cc:	88 f0       	brcs	.+34     	; 0x9f0 <__fixunssfsi+0x28>
 9ce:	9f 57       	subi	r25, 0x7F	; 127
 9d0:	98 f0       	brcs	.+38     	; 0x9f8 <__fixunssfsi+0x30>
 9d2:	b9 2f       	mov	r27, r25
 9d4:	99 27       	eor	r25, r25
 9d6:	b7 51       	subi	r27, 0x17	; 23
 9d8:	b0 f0       	brcs	.+44     	; 0xa06 <__fixunssfsi+0x3e>
 9da:	e1 f0       	breq	.+56     	; 0xa14 <__fixunssfsi+0x4c>
 9dc:	66 0f       	add	r22, r22
 9de:	77 1f       	adc	r23, r23
 9e0:	88 1f       	adc	r24, r24
 9e2:	99 1f       	adc	r25, r25
 9e4:	1a f0       	brmi	.+6      	; 0x9ec <__fixunssfsi+0x24>
 9e6:	ba 95       	dec	r27
 9e8:	c9 f7       	brne	.-14     	; 0x9dc <__fixunssfsi+0x14>
 9ea:	14 c0       	rjmp	.+40     	; 0xa14 <__fixunssfsi+0x4c>
 9ec:	b1 30       	cpi	r27, 0x01	; 1
 9ee:	91 f0       	breq	.+36     	; 0xa14 <__fixunssfsi+0x4c>
 9f0:	0e 94 9a 05 	call	0xb34	; 0xb34 <__fp_zero>
 9f4:	b1 e0       	ldi	r27, 0x01	; 1
 9f6:	08 95       	ret
 9f8:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__fp_zero>
 9fc:	67 2f       	mov	r22, r23
 9fe:	78 2f       	mov	r23, r24
 a00:	88 27       	eor	r24, r24
 a02:	b8 5f       	subi	r27, 0xF8	; 248
 a04:	39 f0       	breq	.+14     	; 0xa14 <__fixunssfsi+0x4c>
 a06:	b9 3f       	cpi	r27, 0xF9	; 249
 a08:	cc f3       	brlt	.-14     	; 0x9fc <__fixunssfsi+0x34>
 a0a:	86 95       	lsr	r24
 a0c:	77 95       	ror	r23
 a0e:	67 95       	ror	r22
 a10:	b3 95       	inc	r27
 a12:	d9 f7       	brne	.-10     	; 0xa0a <__fixunssfsi+0x42>
 a14:	3e f4       	brtc	.+14     	; 0xa24 <__fixunssfsi+0x5c>
 a16:	90 95       	com	r25
 a18:	80 95       	com	r24
 a1a:	70 95       	com	r23
 a1c:	61 95       	neg	r22
 a1e:	7f 4f       	sbci	r23, 0xFF	; 255
 a20:	8f 4f       	sbci	r24, 0xFF	; 255
 a22:	9f 4f       	sbci	r25, 0xFF	; 255
 a24:	08 95       	ret

00000a26 <__floatunsisf>:
 a26:	e8 94       	clt
 a28:	09 c0       	rjmp	.+18     	; 0xa3c <__floatsisf+0x12>

00000a2a <__floatsisf>:
 a2a:	97 fb       	bst	r25, 7
 a2c:	3e f4       	brtc	.+14     	; 0xa3c <__floatsisf+0x12>
 a2e:	90 95       	com	r25
 a30:	80 95       	com	r24
 a32:	70 95       	com	r23
 a34:	61 95       	neg	r22
 a36:	7f 4f       	sbci	r23, 0xFF	; 255
 a38:	8f 4f       	sbci	r24, 0xFF	; 255
 a3a:	9f 4f       	sbci	r25, 0xFF	; 255
 a3c:	99 23       	and	r25, r25
 a3e:	a9 f0       	breq	.+42     	; 0xa6a <__floatsisf+0x40>
 a40:	f9 2f       	mov	r31, r25
 a42:	96 e9       	ldi	r25, 0x96	; 150
 a44:	bb 27       	eor	r27, r27
 a46:	93 95       	inc	r25
 a48:	f6 95       	lsr	r31
 a4a:	87 95       	ror	r24
 a4c:	77 95       	ror	r23
 a4e:	67 95       	ror	r22
 a50:	b7 95       	ror	r27
 a52:	f1 11       	cpse	r31, r1
 a54:	f8 cf       	rjmp	.-16     	; 0xa46 <__floatsisf+0x1c>
 a56:	fa f4       	brpl	.+62     	; 0xa96 <__floatsisf+0x6c>
 a58:	bb 0f       	add	r27, r27
 a5a:	11 f4       	brne	.+4      	; 0xa60 <__floatsisf+0x36>
 a5c:	60 ff       	sbrs	r22, 0
 a5e:	1b c0       	rjmp	.+54     	; 0xa96 <__floatsisf+0x6c>
 a60:	6f 5f       	subi	r22, 0xFF	; 255
 a62:	7f 4f       	sbci	r23, 0xFF	; 255
 a64:	8f 4f       	sbci	r24, 0xFF	; 255
 a66:	9f 4f       	sbci	r25, 0xFF	; 255
 a68:	16 c0       	rjmp	.+44     	; 0xa96 <__floatsisf+0x6c>
 a6a:	88 23       	and	r24, r24
 a6c:	11 f0       	breq	.+4      	; 0xa72 <__floatsisf+0x48>
 a6e:	96 e9       	ldi	r25, 0x96	; 150
 a70:	11 c0       	rjmp	.+34     	; 0xa94 <__floatsisf+0x6a>
 a72:	77 23       	and	r23, r23
 a74:	21 f0       	breq	.+8      	; 0xa7e <__floatsisf+0x54>
 a76:	9e e8       	ldi	r25, 0x8E	; 142
 a78:	87 2f       	mov	r24, r23
 a7a:	76 2f       	mov	r23, r22
 a7c:	05 c0       	rjmp	.+10     	; 0xa88 <__floatsisf+0x5e>
 a7e:	66 23       	and	r22, r22
 a80:	71 f0       	breq	.+28     	; 0xa9e <__floatsisf+0x74>
 a82:	96 e8       	ldi	r25, 0x86	; 134
 a84:	86 2f       	mov	r24, r22
 a86:	70 e0       	ldi	r23, 0x00	; 0
 a88:	60 e0       	ldi	r22, 0x00	; 0
 a8a:	2a f0       	brmi	.+10     	; 0xa96 <__floatsisf+0x6c>
 a8c:	9a 95       	dec	r25
 a8e:	66 0f       	add	r22, r22
 a90:	77 1f       	adc	r23, r23
 a92:	88 1f       	adc	r24, r24
 a94:	da f7       	brpl	.-10     	; 0xa8c <__floatsisf+0x62>
 a96:	88 0f       	add	r24, r24
 a98:	96 95       	lsr	r25
 a9a:	87 95       	ror	r24
 a9c:	97 f9       	bld	r25, 7
 a9e:	08 95       	ret

00000aa0 <__fp_inf>:
 aa0:	97 f9       	bld	r25, 7
 aa2:	9f 67       	ori	r25, 0x7F	; 127
 aa4:	80 e8       	ldi	r24, 0x80	; 128
 aa6:	70 e0       	ldi	r23, 0x00	; 0
 aa8:	60 e0       	ldi	r22, 0x00	; 0
 aaa:	08 95       	ret

00000aac <__fp_nan>:
 aac:	9f ef       	ldi	r25, 0xFF	; 255
 aae:	80 ec       	ldi	r24, 0xC0	; 192
 ab0:	08 95       	ret

00000ab2 <__fp_pscA>:
 ab2:	00 24       	eor	r0, r0
 ab4:	0a 94       	dec	r0
 ab6:	16 16       	cp	r1, r22
 ab8:	17 06       	cpc	r1, r23
 aba:	18 06       	cpc	r1, r24
 abc:	09 06       	cpc	r0, r25
 abe:	08 95       	ret

00000ac0 <__fp_pscB>:
 ac0:	00 24       	eor	r0, r0
 ac2:	0a 94       	dec	r0
 ac4:	12 16       	cp	r1, r18
 ac6:	13 06       	cpc	r1, r19
 ac8:	14 06       	cpc	r1, r20
 aca:	05 06       	cpc	r0, r21
 acc:	08 95       	ret

00000ace <__fp_round>:
 ace:	09 2e       	mov	r0, r25
 ad0:	03 94       	inc	r0
 ad2:	00 0c       	add	r0, r0
 ad4:	11 f4       	brne	.+4      	; 0xada <__fp_round+0xc>
 ad6:	88 23       	and	r24, r24
 ad8:	52 f0       	brmi	.+20     	; 0xaee <__fp_round+0x20>
 ada:	bb 0f       	add	r27, r27
 adc:	40 f4       	brcc	.+16     	; 0xaee <__fp_round+0x20>
 ade:	bf 2b       	or	r27, r31
 ae0:	11 f4       	brne	.+4      	; 0xae6 <__fp_round+0x18>
 ae2:	60 ff       	sbrs	r22, 0
 ae4:	04 c0       	rjmp	.+8      	; 0xaee <__fp_round+0x20>
 ae6:	6f 5f       	subi	r22, 0xFF	; 255
 ae8:	7f 4f       	sbci	r23, 0xFF	; 255
 aea:	8f 4f       	sbci	r24, 0xFF	; 255
 aec:	9f 4f       	sbci	r25, 0xFF	; 255
 aee:	08 95       	ret

00000af0 <__fp_split3>:
 af0:	57 fd       	sbrc	r21, 7
 af2:	90 58       	subi	r25, 0x80	; 128
 af4:	44 0f       	add	r20, r20
 af6:	55 1f       	adc	r21, r21
 af8:	59 f0       	breq	.+22     	; 0xb10 <__fp_splitA+0x10>
 afa:	5f 3f       	cpi	r21, 0xFF	; 255
 afc:	71 f0       	breq	.+28     	; 0xb1a <__fp_splitA+0x1a>
 afe:	47 95       	ror	r20

00000b00 <__fp_splitA>:
 b00:	88 0f       	add	r24, r24
 b02:	97 fb       	bst	r25, 7
 b04:	99 1f       	adc	r25, r25
 b06:	61 f0       	breq	.+24     	; 0xb20 <__fp_splitA+0x20>
 b08:	9f 3f       	cpi	r25, 0xFF	; 255
 b0a:	79 f0       	breq	.+30     	; 0xb2a <__fp_splitA+0x2a>
 b0c:	87 95       	ror	r24
 b0e:	08 95       	ret
 b10:	12 16       	cp	r1, r18
 b12:	13 06       	cpc	r1, r19
 b14:	14 06       	cpc	r1, r20
 b16:	55 1f       	adc	r21, r21
 b18:	f2 cf       	rjmp	.-28     	; 0xafe <__fp_split3+0xe>
 b1a:	46 95       	lsr	r20
 b1c:	f1 df       	rcall	.-30     	; 0xb00 <__fp_splitA>
 b1e:	08 c0       	rjmp	.+16     	; 0xb30 <__fp_splitA+0x30>
 b20:	16 16       	cp	r1, r22
 b22:	17 06       	cpc	r1, r23
 b24:	18 06       	cpc	r1, r24
 b26:	99 1f       	adc	r25, r25
 b28:	f1 cf       	rjmp	.-30     	; 0xb0c <__fp_splitA+0xc>
 b2a:	86 95       	lsr	r24
 b2c:	71 05       	cpc	r23, r1
 b2e:	61 05       	cpc	r22, r1
 b30:	08 94       	sec
 b32:	08 95       	ret

00000b34 <__fp_zero>:
 b34:	e8 94       	clt

00000b36 <__fp_szero>:
 b36:	bb 27       	eor	r27, r27
 b38:	66 27       	eor	r22, r22
 b3a:	77 27       	eor	r23, r23
 b3c:	cb 01       	movw	r24, r22
 b3e:	97 f9       	bld	r25, 7
 b40:	08 95       	ret

00000b42 <__mulsf3>:
 b42:	0e 94 b4 05 	call	0xb68	; 0xb68 <__mulsf3x>
 b46:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_round>
 b4a:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscA>
 b4e:	38 f0       	brcs	.+14     	; 0xb5e <__mulsf3+0x1c>
 b50:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_pscB>
 b54:	20 f0       	brcs	.+8      	; 0xb5e <__mulsf3+0x1c>
 b56:	95 23       	and	r25, r21
 b58:	11 f0       	breq	.+4      	; 0xb5e <__mulsf3+0x1c>
 b5a:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
 b5e:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_nan>
 b62:	11 24       	eor	r1, r1
 b64:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>

00000b68 <__mulsf3x>:
 b68:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
 b6c:	70 f3       	brcs	.-36     	; 0xb4a <__mulsf3+0x8>

00000b6e <__mulsf3_pse>:
 b6e:	95 9f       	mul	r25, r21
 b70:	c1 f3       	breq	.-16     	; 0xb62 <__mulsf3+0x20>
 b72:	95 0f       	add	r25, r21
 b74:	50 e0       	ldi	r21, 0x00	; 0
 b76:	55 1f       	adc	r21, r21
 b78:	62 9f       	mul	r22, r18
 b7a:	f0 01       	movw	r30, r0
 b7c:	72 9f       	mul	r23, r18
 b7e:	bb 27       	eor	r27, r27
 b80:	f0 0d       	add	r31, r0
 b82:	b1 1d       	adc	r27, r1
 b84:	63 9f       	mul	r22, r19
 b86:	aa 27       	eor	r26, r26
 b88:	f0 0d       	add	r31, r0
 b8a:	b1 1d       	adc	r27, r1
 b8c:	aa 1f       	adc	r26, r26
 b8e:	64 9f       	mul	r22, r20
 b90:	66 27       	eor	r22, r22
 b92:	b0 0d       	add	r27, r0
 b94:	a1 1d       	adc	r26, r1
 b96:	66 1f       	adc	r22, r22
 b98:	82 9f       	mul	r24, r18
 b9a:	22 27       	eor	r18, r18
 b9c:	b0 0d       	add	r27, r0
 b9e:	a1 1d       	adc	r26, r1
 ba0:	62 1f       	adc	r22, r18
 ba2:	73 9f       	mul	r23, r19
 ba4:	b0 0d       	add	r27, r0
 ba6:	a1 1d       	adc	r26, r1
 ba8:	62 1f       	adc	r22, r18
 baa:	83 9f       	mul	r24, r19
 bac:	a0 0d       	add	r26, r0
 bae:	61 1d       	adc	r22, r1
 bb0:	22 1f       	adc	r18, r18
 bb2:	74 9f       	mul	r23, r20
 bb4:	33 27       	eor	r19, r19
 bb6:	a0 0d       	add	r26, r0
 bb8:	61 1d       	adc	r22, r1
 bba:	23 1f       	adc	r18, r19
 bbc:	84 9f       	mul	r24, r20
 bbe:	60 0d       	add	r22, r0
 bc0:	21 1d       	adc	r18, r1
 bc2:	82 2f       	mov	r24, r18
 bc4:	76 2f       	mov	r23, r22
 bc6:	6a 2f       	mov	r22, r26
 bc8:	11 24       	eor	r1, r1
 bca:	9f 57       	subi	r25, 0x7F	; 127
 bcc:	50 40       	sbci	r21, 0x00	; 0
 bce:	9a f0       	brmi	.+38     	; 0xbf6 <__mulsf3_pse+0x88>
 bd0:	f1 f0       	breq	.+60     	; 0xc0e <__mulsf3_pse+0xa0>
 bd2:	88 23       	and	r24, r24
 bd4:	4a f0       	brmi	.+18     	; 0xbe8 <__mulsf3_pse+0x7a>
 bd6:	ee 0f       	add	r30, r30
 bd8:	ff 1f       	adc	r31, r31
 bda:	bb 1f       	adc	r27, r27
 bdc:	66 1f       	adc	r22, r22
 bde:	77 1f       	adc	r23, r23
 be0:	88 1f       	adc	r24, r24
 be2:	91 50       	subi	r25, 0x01	; 1
 be4:	50 40       	sbci	r21, 0x00	; 0
 be6:	a9 f7       	brne	.-22     	; 0xbd2 <__mulsf3_pse+0x64>
 be8:	9e 3f       	cpi	r25, 0xFE	; 254
 bea:	51 05       	cpc	r21, r1
 bec:	80 f0       	brcs	.+32     	; 0xc0e <__mulsf3_pse+0xa0>
 bee:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
 bf2:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
 bf6:	5f 3f       	cpi	r21, 0xFF	; 255
 bf8:	e4 f3       	brlt	.-8      	; 0xbf2 <__mulsf3_pse+0x84>
 bfa:	98 3e       	cpi	r25, 0xE8	; 232
 bfc:	d4 f3       	brlt	.-12     	; 0xbf2 <__mulsf3_pse+0x84>
 bfe:	86 95       	lsr	r24
 c00:	77 95       	ror	r23
 c02:	67 95       	ror	r22
 c04:	b7 95       	ror	r27
 c06:	f7 95       	ror	r31
 c08:	e7 95       	ror	r30
 c0a:	9f 5f       	subi	r25, 0xFF	; 255
 c0c:	c1 f7       	brne	.-16     	; 0xbfe <__mulsf3_pse+0x90>
 c0e:	fe 2b       	or	r31, r30
 c10:	88 0f       	add	r24, r24
 c12:	91 1d       	adc	r25, r1
 c14:	96 95       	lsr	r25
 c16:	87 95       	ror	r24
 c18:	97 f9       	bld	r25, 7
 c1a:	08 95       	ret

00000c1c <_exit>:
 c1c:	f8 94       	cli

00000c1e <__stop_program>:
 c1e:	ff cf       	rjmp	.-2      	; 0xc1e <__stop_program>
